
# services:
# ###> doctrine/doctrine-bundle ###
#   database:
#     image: postgres:${POSTGRES_VERSION:-16}-alpine
#     environment:
#       POSTGRES_DB: ${POSTGRES_DB:-app}
#       # You should definitely change the password in production
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
#       POSTGRES_USER: ${POSTGRES_USER:-app}
#     healthcheck:
#       test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
#       timeout: 5s
#       retries: 5
#       start_period: 60s
#     volumes:
#       - database_data:/var/lib/postgresql/data:rw
#       # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
#       # - ./docker/db/data:/var/lib/postgresql/data:rw
# ###< doctrine/doctrine-bundle ###

#   pgadmin:
#     image: dpage/pgadmin4
#     environment:
#       PGADMIN_DEFAULT_EMAIL: admin@admin.com
#       PGADMIN_DEFAULT_PASSWORD: admin
#     ports:
#       - "8081:80"  # Accès via http://localhost:8081
#     depends_on:
#       - database
#     restart: always

# volumes:
# ###> doctrine/doctrine-bundle ###
#   database_data:
# ###< doctrine/doctrine-bundle ###


services:

  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: streemi
      MYSQL_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/mysql:rw

  postgres:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
      
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysql  # Nom du service MySQL dans le docker-compose
      PMA_USER: root   # Utilisateur MySQL
      PMA_PASSWORD: root  # Mot de passe MySQL
    ports:
      - "8081:80"  # Accès via http://localhost:8081
    restart: always

volumes:
  pg_data:
  mysql_data: